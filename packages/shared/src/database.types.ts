// Database types for Supabase
// This would normally be generated by supabase gen types, but for now we'll define the basic structure

export interface Database {
  public: {
    Tables: {
      queues: {
        Row: {
          id: string;
          name: string;
          created_at: string;
        };
        Insert: {
          id?: string;
          name: string;
          created_at?: string;
        };
        Update: {
          id?: string;
          name?: string;
          created_at?: string;
        };
      };
      submissions: {
        Row: {
          id: string;
          queue_id: string;
          labeling_task_id: string;
          created_at_ms: number;
          raw: any;
          created_at: string;
        };
        Insert: {
          id: string;
          queue_id: string;
          labeling_task_id: string;
          created_at_ms: number;
          raw: any;
          created_at?: string;
        };
        Update: {
          id?: string;
          queue_id?: string;
          labeling_task_id?: string;
          created_at_ms?: number;
          raw?: any;
          created_at?: string;
        };
      };
      judges: {
        Row: {
          id: string;
          name: string;
          system_prompt: string;
          provider: string;
          model: string;
          active: boolean;
          created_at: string;
        };
        Insert: {
          id?: string;
          name: string;
          system_prompt: string;
          provider?: string;
          model: string;
          active?: boolean;
          created_at?: string;
        };
        Update: {
          id?: string;
          name?: string;
          system_prompt?: string;
          provider?: string;
          model?: string;
          active?: boolean;
          created_at?: string;
        };
      };
      evaluations: {
        Row: {
          id: string;
          run_id: string;
          submission_id: string;
          template_id: string;
          judge_id: string;
          verdict: 'pass' | 'fail' | 'inconclusive';
          reasoning: string;
          provider: string;
          model: string;
          latency_ms?: number;
          error?: string;
          created_at: string;
        };
        Insert: {
          id?: string;
          run_id: string;
          submission_id: string;
          template_id: string;
          judge_id: string;
          verdict: 'pass' | 'fail' | 'inconclusive';
          reasoning: string;
          provider: string;
          model: string;
          latency_ms?: number;
          error?: string;
          created_at?: string;
        };
        Update: {
          id?: string;
          run_id?: string;
          submission_id?: string;
          template_id?: string;
          judge_id?: string;
          verdict?: 'pass' | 'fail' | 'inconclusive';
          reasoning?: string;
          provider?: string;
          model?: string;
          latency_ms?: number;
          error?: string;
          created_at?: string;
        };
      };
    };
  };
}
